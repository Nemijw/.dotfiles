set -sg escape-time 1
# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix
#
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin "janoamaral/tokyo-night-tmux"

set -g @resurrect-save 'M'
set -g @resurrect-restore 'N'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '3'
# split panes using | and -
bind s split-window -h -c "#{pane_current_path}"
bind v split-window -v -c "#{pane_current_path}"

unbind c
bind c new-window -c "~"

unbind '"'
unbind %

unbind ,
bind-key , command-prompt -p (rename-window) "rename-window '%%'"
unbind $
bind-key $ command-prompt -p (rename-session) "rename-session '%%'"
bind W choose-session
bind S command-prompt -p "New Session:" "new-session -A -s '%%' -c '~'"
bind K kill-session
bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt
set -g detach-on-destroy off  # don't exit from tmux when closing a session
#
set-option -g history-limit 25000
#
set -g mouse on
#
# #Disable exit-empty
set -s exit-empty off
# # Disable automatic renaming
set-option -wg automatic-rename off:q

# # set-option -g focus-events on
# Use xclip to copy and paste with the system clipboard
# bind C-c run "tmux save-buffer - | xclip -i -sel clip"
# bind C-v run "tmux set-buffer $(xclip -o -sel clip); tmux paste-buffer"
#
# vi for copy mode
setw -g mode-keys vi
# keybindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

bind -r ^ last-window
# bind -r k select-pane -U
# bind -r j select-pane -D
# bind -r h select-pane -L
# bind -r l select-pane -R
# forget the find window.  That is for chumps
bind-key -r f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"

#resize with arrows.
bind-key -r -T prefix       Up              resize-pane -U 5
bind-key -r -T prefix       Down            resize-pane -D 5
bind-key -r -T prefix       Left            resize-pane -L 5
bind-key -r -T prefix       Right           resize-pane -R 5

# status bar
# set -g status-right "#(pomo)"
# set -g status-style "fg=#665c54"
# set -g status-left-style "fg=#928374"

set -g status-bg default
set -g status-position top
set -g status-interval 1
set -g status-left ""

# disable status
# set -g status off
# set -g status on

# count the panes from 1
set -g base-index 1
setw -g pane-base-index 1
set-option -g renumber-windows on

# reload configuration
bind-key -r r source-file ~/.tmux.conf

# term colors, these are the correct ones according to neovim checkhealth
set-option -g default-terminal "screen-256color"

##
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\\\'  'select-pane -l'"

bind-key -n 'M-Space' if-shell "$is_vim" 'send-keys M-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l
bind-key -T copy-mode-vi 'M-Space' select-pane -t:.+
##

if "test ! -d ~/.tmux/plugins/tpm" \
       "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
